[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "The Education \nAfter getting my Associate’s Degree in Mathematics from community college, I discovered the field of data science at UCSB. I quickly grew to love the field and was ever enamored by the insight our data is capable of telling us. Along the way, I also learned a lot about the ethics of data science and the importance of unbiased data at the point of collection. I took both of these pieces with me as a fellow for the Central Coast Data Science Fellowship (CCDSP). I sat on the outreach committee, where I got to share my newfound love of data science with high school students who were not privy to this powerful field. In my final year of my undergrad, I worked with the Energy and Environment Transitions lab on campus (ENVENT) for my capstone project. A team of three undergrads and myself were tasked with analyzing how demographic variables are differentially predictive of climate change opinions, using global survey data. It was during this project that I discovered the specific sector of data science I want to work within - Environmental Data Science! I returned to school in the fall of 2023 and received my Master’s in Environmental Data Science! Despite both being environmental, my capstone project during my master’s program was so different than my capstone during my undergrad! I was lucky to work with Darn Tough, a Vermont-based sock manufacturer, to help them streamline their carbon emission calculation process, as well as provide them with tangible suggestions on how to reach their reduction targets.\n\n\nThe internship \nImmediately after graduating from the University of California, Santa Barbara, with a Bachelor of Science in Statistics and Data Science and a minor in Feminist Studies, I took on an internship with California Cooperative Oceanic Fisheries Investigations (CalCOFI). My role in this internship was to create an interactive data storytelling tool that would inform California Coastal residents about the threat of hypoxia in our California Coastal Ecosystem. The project stemmed from the realization that California Coastal residents are not widely informed about what hypoxia is and how it changes with climate change. The project heavily relied on science communication to create an interactive web-based primer through “scrolly-telling.” Upon finishing the primer, another intern and I started an outreach portion of the internship where we went to local high schools to inform students about the field of environmental data science. We created an activity to help the students get their hands dirty analyzing real-life environmental data collected by CalCOFI!\n\n\nThe life outside of my computer! \nI love to code, analyze, make cool visualizations, and learn about subjects I know little about through data science/analysis. But this isn’t all I do! I am a Southern California native and I take full advantage of it! I grew up mountain biking and hiking and have taken part in those activities ever since! I recently cheated on my mountain bike by purchasing a gravel bike and have since become hooked on road cycling and bikepacking. I have lived in Ventura County my whole life but moved to Ventura proper in 2022 and haven’t stopped biking my way between here and Santa Barbara since - the views never get old!\nOver the past year, I have picked up an interest in zero-waste cooking/cooking in general. I try and make a new semi-elaborate recipe every week. I make all my own almond and oat mylk, and repurpose the almond/oat pulp to make meal, crackers, and granola (one day I want to make my coffee cart and sell matcha lattes using my homemade nut milks as a passion project!)! Living in an apartment without a garden, I don’t have a way to effectively compost. Instead, I freeze all my vegetable scraps and make vegetable broth each week with them. I am planning to start dabbling in bread-making soon!"
  },
  {
    "objectID": "posts/bike_infographic/index.html",
    "href": "posts/bike_infographic/index.html",
    "title": "Seattle Bike Trends",
    "section": "",
    "text": "As an avid bike rider and lover of alternative transit, I played around with some bike data from Seattle and created an infographic to showcase the trends that I found. I wanted to inform viewers on how bike usage changes seasonally and annually in Seattle, Washington. My goals of this infographic were to quantify the general number of bikes on the road in Seattle, compare bike usage across six different bike counting locations, and look into seasonal biking trends. In order to do this, I utilized data from Data.Seattle.gov. 1 I specifically utilized 6 different data sets that are all analogous in structure, but each for a different location. Each dataset contains four columns: the date, the number of bikes counted that were travelling northbound, the number of bikes counted that were travelling southbound, and the total number of bikes counted (the northbound column + the southbound column). The date column includes hourly data, so each observation in the dataset is a date and an individual hour. When I aggregated the six different locations into one data set, I added a column to specify the location, and removed the north and south bound columns.\nTo achieve the goals stated above, I created three different visualizations to include in my infographic. I first created a bar plot to show the total number of bikes counted in my aggregated dataset for each year (2014-2020). I also created an area graph that shows the total number of bikes counted monthly at each of the six different locations. Unlike the bar plot, this graph takes month and location into consideration. The third plot I created was a heatmap that aims to look at trends both monthly and yearly. I hoped that this plot could reveal any potential global warming trends- i.e. did biking start to become less popular in June as years progressed?\nWhen creating these plots, I made many different considerations to implement my design. The first decision I made was which types of plots I would use to convey each of my goals. I decided on a bar plot for the yearly total number of bikes counted because it easily conveyed the differences among the years. I used an area plot specifically for the monthly data as I wanted to visualize how usage varies from location to location. This graph also allowed me to see if certain locations were more popular in certain months than others- for example, were bike trails more popular in summer than a busy street? Finally, I decided on a heatmap to visualize how bike usage changed across both month and year because the different tiles make the count of bikes digestable with a continuous color scale. On all these plots, I made updates to the plot titles. In the case of the bar plot, I removed the title all together and utilized annotations instead. To remove extra clutter, I removed every other x axis tick mark (month) in the area plot. I updated the font for all plots to be consistent with the infographic title font. I made these updates in the theme() layer of each plot. Other updates to the theme() layer include adjusting the margins of the legend, rotating the legend (for the heatmap), increasing legend size (for the heatmap and area plot), and updating the size of x and y axis tick marks/ labels (all three plots).\nWhen arranging the elements in my infographic, I considered many different options to get my message across in a clean and concise way that was not visually overwhelming. I wanted my area plot and bar plot to be near each other, towards the bottom of the plot. I wanted these two plots to represent land type objects (the area plot a mountain, and the bar plot to be city buildings). I wanted them towards the bottom so they looked more grounded and didn’t represent a floating mountain/ buildings. Because of this, I placed the heatmap toward the top of the map. To eliminate too much text and blank space, I also added a space needle building image. I broke up the text into smaller chunks and spread them out to avoid paragraphs of text. In order to contextualize my data, I added a paragraph that provided a bit of background on the data itself and when it started to be collected. I also provided average annual and monthly temperatures via text boxes to allow viewers to contextualize what the temperatures might be when they see peaks and valleys of bike counts, both yearly and monthly. The central message that I wanted to get across was that time of year/ temperature played a large role in the number of bikers that were counted. I made this the central message not only through my plots, but also through the text and annotations that incorporated temperature in relation to each of the three plots.\nOnce I decided on the current color palette, I used color blind simulator to see if the palette I chose was color friendly. The color palette I chose was centered around differentiating the different locations in my area plot, and these differences were still clear among all color deficiencies. Before creating my infographic, I used a DEI lens by looking into the different locations that the bike sensors were implemented to see if they were in only wealthy neighborhoods that would likely count more bikes. The bike locations came from different road types (i.e. bike pathways, public roads, etc.) and were not privy to any certain area.\nI have included all code to my three different visualizations below! All plots were generated using ggplot() and I used magick() to add these plots together create a base infographic. When utilizing magick(), some text was rendering fuzzy, despite being clear in the individual PNGs.To make text as legible as possible, I ended up individually adding the PNGs to a Canva document. I used the base infographic that I created below (with the background color and title) as the background, and then added all other elements on top in Canva. I hope you enjoy exploring my infographic and code below!"
  },
  {
    "objectID": "posts/bike_infographic/index.html#infographic-overview",
    "href": "posts/bike_infographic/index.html#infographic-overview",
    "title": "Seattle Bike Trends",
    "section": "",
    "text": "As an avid bike rider and lover of alternative transit, I played around with some bike data from Seattle and created an infographic to showcase the trends that I found. I wanted to inform viewers on how bike usage changes seasonally and annually in Seattle, Washington. My goals of this infographic were to quantify the general number of bikes on the road in Seattle, compare bike usage across six different bike counting locations, and look into seasonal biking trends. In order to do this, I utilized data from Data.Seattle.gov. 1 I specifically utilized 6 different data sets that are all analogous in structure, but each for a different location. Each dataset contains four columns: the date, the number of bikes counted that were travelling northbound, the number of bikes counted that were travelling southbound, and the total number of bikes counted (the northbound column + the southbound column). The date column includes hourly data, so each observation in the dataset is a date and an individual hour. When I aggregated the six different locations into one data set, I added a column to specify the location, and removed the north and south bound columns.\nTo achieve the goals stated above, I created three different visualizations to include in my infographic. I first created a bar plot to show the total number of bikes counted in my aggregated dataset for each year (2014-2020). I also created an area graph that shows the total number of bikes counted monthly at each of the six different locations. Unlike the bar plot, this graph takes month and location into consideration. The third plot I created was a heatmap that aims to look at trends both monthly and yearly. I hoped that this plot could reveal any potential global warming trends- i.e. did biking start to become less popular in June as years progressed?\nWhen creating these plots, I made many different considerations to implement my design. The first decision I made was which types of plots I would use to convey each of my goals. I decided on a bar plot for the yearly total number of bikes counted because it easily conveyed the differences among the years. I used an area plot specifically for the monthly data as I wanted to visualize how usage varies from location to location. This graph also allowed me to see if certain locations were more popular in certain months than others- for example, were bike trails more popular in summer than a busy street? Finally, I decided on a heatmap to visualize how bike usage changed across both month and year because the different tiles make the count of bikes digestable with a continuous color scale. On all these plots, I made updates to the plot titles. In the case of the bar plot, I removed the title all together and utilized annotations instead. To remove extra clutter, I removed every other x axis tick mark (month) in the area plot. I updated the font for all plots to be consistent with the infographic title font. I made these updates in the theme() layer of each plot. Other updates to the theme() layer include adjusting the margins of the legend, rotating the legend (for the heatmap), increasing legend size (for the heatmap and area plot), and updating the size of x and y axis tick marks/ labels (all three plots).\nWhen arranging the elements in my infographic, I considered many different options to get my message across in a clean and concise way that was not visually overwhelming. I wanted my area plot and bar plot to be near each other, towards the bottom of the plot. I wanted these two plots to represent land type objects (the area plot a mountain, and the bar plot to be city buildings). I wanted them towards the bottom so they looked more grounded and didn’t represent a floating mountain/ buildings. Because of this, I placed the heatmap toward the top of the map. To eliminate too much text and blank space, I also added a space needle building image. I broke up the text into smaller chunks and spread them out to avoid paragraphs of text. In order to contextualize my data, I added a paragraph that provided a bit of background on the data itself and when it started to be collected. I also provided average annual and monthly temperatures via text boxes to allow viewers to contextualize what the temperatures might be when they see peaks and valleys of bike counts, both yearly and monthly. The central message that I wanted to get across was that time of year/ temperature played a large role in the number of bikers that were counted. I made this the central message not only through my plots, but also through the text and annotations that incorporated temperature in relation to each of the three plots.\nOnce I decided on the current color palette, I used color blind simulator to see if the palette I chose was color friendly. The color palette I chose was centered around differentiating the different locations in my area plot, and these differences were still clear among all color deficiencies. Before creating my infographic, I used a DEI lens by looking into the different locations that the bike sensors were implemented to see if they were in only wealthy neighborhoods that would likely count more bikes. The bike locations came from different road types (i.e. bike pathways, public roads, etc.) and were not privy to any certain area.\nI have included all code to my three different visualizations below! All plots were generated using ggplot() and I used magick() to add these plots together create a base infographic. When utilizing magick(), some text was rendering fuzzy, despite being clear in the individual PNGs.To make text as legible as possible, I ended up individually adding the PNGs to a Canva document. I used the base infographic that I created below (with the background color and title) as the background, and then added all other elements on top in Canva. I hope you enjoy exploring my infographic and code below!"
  },
  {
    "objectID": "posts/bike_infographic/index.html#seattle-bike-count-infographic",
    "href": "posts/bike_infographic/index.html#seattle-bike-count-infographic",
    "title": "Seattle Bike Trends",
    "section": "Seattle Bike Count Infographic",
    "text": "Seattle Bike Count Infographic\n\n\nCode\nhtmltools::tags$iframe(style=\"width:100%; height:600px;\", src=\"output/infographic.pdf\")"
  },
  {
    "objectID": "posts/bike_infographic/index.html#code-for-infographic-elements",
    "href": "posts/bike_infographic/index.html#code-for-infographic-elements",
    "title": "Seattle Bike Trends",
    "section": "Code for Infographic Elements",
    "text": "Code for Infographic Elements\n\nNote that visualizations below are scaled to fit onto the infographic and not for stand alone purposes\n\n\nLoad Libraries\n\n\nCode\nlibrary(showtext)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(sf)\nlibrary(ggmap)\nlibrary(tmap)\nlibrary(lubridate)\nlibrary(tidyverse)\nlibrary(ggimage)\nlibrary(patchwork)\nlibrary(ggtext)\nlibrary(magick)\nlibrary(png)\nlibrary(grid)\n\n\n\n\nImport and Wrangle Data\n\n\nCode\n##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n##                                import data                               ----\n##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\nbroadway&lt;- read.csv(here::here(\"posts\", \"bike_infographic\",\"raw-data\",\"Broadway_Cycle_Track_North_Of_E_Union_St_Bicycle_Counter__Out_of_Service__20240202.csv\"))\nburke &lt;- read.csv(here::here(\"posts\", \"bike_infographic\",\"raw-data\",\"Burke_Gilman_Trail_north_of_NE_70th_St_Bicycle_and_Pedestrian_Counter_20240202.csv\"))\nchief &lt;- read.csv(here::here(\"posts\", \"bike_infographic\",\"raw-data\",\"Chief_Sealth_Trail_North_of_Thistle_Bicycle_Counter__Out_of_Service__20240202.csv\"))\nelliott &lt;- read.csv(here::here(\"posts\", \"bike_infographic\",\"raw-data\",\"Elliott_Bay_Trail_in_Myrtle_Edwards_Park_Bicycle_and_Pedestrian_Counter__Out_of_Service__20240202.csv\"))\nmts &lt;- read.csv(here::here(\"posts\", \"bike_infographic\",\"raw-data\",\"MTS_Trail_west_of_I-90_Bridge_Bicycle_and_Pedestrian_Counter__Out_of_Service__20240202.csv\"))\nfifty_eight &lt;- read.csv(here::here(\"posts\", \"bike_infographic\",\"raw-data\",\"NW_58th_St_Greenway_at_22nd_Ave_NW_Bicycle_Counter__Out_of_Service__20240202.csv\"))\n\n\n\n\n##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n##                                merge data                            ----\n##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n# rename total bike column for dataframes with bike only, create total bike column for dataframes with pedestrians ( since we dont want to include pedestrians in our dataframe)\n#do this renaming and totaling schema for all 7 datasets\n\nbroadway &lt;- broadway %&gt;% rename(\"bike_total\" = \"Broadway.Cycle.Track.North.Of.E.Union.St.Total\")\nburke$bike_total &lt;- burke$Bike.North + burke$Bike.South\nchief$bike_total &lt;- chief$Bike.North + chief$Bike.South\nelliott$bike_total &lt;- elliott$Bike.North + elliott$Bike.South\nfifty_eight &lt;- fifty_eight %&gt;% rename(\"bike_total\" = \"NW.58th.St.Greenway.st.22nd.Ave.NW.Total\")\nmts$bike_total &lt;- mts$Bike.East + mts$Bike.West\n\n\n#rename southbound and northbound columns to have consistent naming for all datasets\n#add locations column for each dataset with a string of what the location is \n#do this renaming and adding column step for all 7 datasets\nburke_clean &lt;- burke %&gt;% \n  rename(\"SB\" = \"Bike.South\" , \"NB\" = \"Bike.North\") %&gt;% \n  select(Date, bike_total, NB, SB, ) %&gt;% \n  mutate(loc = \"Burke\")\n\nchief_clean &lt;- chief %&gt;% \n  rename(\"SB\" = \"Bike.South\" , \"NB\" = \"Bike.North\") %&gt;% \n  select(Date, bike_total, NB, SB, ) %&gt;% \n  mutate(loc = \"Chief\")\n\nelliott_clean &lt;- elliott %&gt;% \n  rename(\"SB\" = \"Bike.South\" , \"NB\" = \"Bike.North\") %&gt;% \n  select(Date, bike_total, NB, SB, ) %&gt;% \n  mutate(loc = \"Elliott\")\n\nfifty_eight_clean &lt;- fifty_eight %&gt;% \n  rename (\"EB\" = \"East\", \"WB\" = \"West\") %&gt;% \n  select(Date, bike_total, EB, WB) %&gt;% \n  mutate(loc = \"58th\")\n\n  \n\nmts_clean &lt;- mts %&gt;% \n  rename(\"WB\" = \"Bike.West\" , \"EB\" = \"Bike.East\") %&gt;% \n  select(Date, bike_total, WB, EB, ) %&gt;% \n  mutate(loc = \"MTS Trail\")\n\nbroadway_clean &lt;- broadway %&gt;% \n  mutate(loc = \"Broadway\")\n\n\n#merge all cleaned dataframes that track north and south traffic\nbike_data &lt;- bind_rows(broadway_clean, burke_clean, chief_clean, elliott_clean,  mts_clean, fifty_eight_clean)\n\n\n##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n##                               create filtered dataframes                           ----\n##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n# update bike data ( base data frame) date column to be in correct format, add year and month column for future filtering ------\n\n#update Date column to type POSIXct for future wrangling, format = current way date column is formatted\nbike_data$Date &lt;- as.POSIXct(bike_data$Date, format = \"%m/%d/%Y %I:%M:%S %p\")\n\n# create year column with year\nbike_data$Year &lt;- year(bike_data$Date)\n\n#create month column with month\nbike_data$Month &lt;- month(bike_data$Date) \nyears &lt;- c(2014,2015,2016,2017,2018,2019,2020)\nbike &lt;- bike_data[bike_data$Year %in% years, ]\n#create a dataframe of daily with the date, location and sum of bike counts for that day (i.e. aggregate hourly counts to be daily)-----\n\nbike_data_daily &lt;- bike %&gt;%\n  #create date column that is aggregated by day\n  mutate(date = floor_date(Date, unit = \"day\")) %&gt;%\n  #group by date and location\n  group_by(date, loc) %&gt;%\n  #create new column that has the daily count of bikes at each location each day\n  summarize(daily_sum = sum(bike_total, na.rm = TRUE), .groups = 'drop') %&gt;%\n  #drop na values (0)\n  drop_na()\n\n#create a dataframe that aggregates the monthly bike counts across all locations, should have two columns only ( month, monthly_total)\n\nbike_data_monthly &lt;-bike %&gt;%\n  #group by month\n  group_by(Month) %&gt;%\n  #create new column that has the monthly count of bikes at all locations\n  summarize(monthly_total = sum(bike_total, na.rm = TRUE)) %&gt;%\n  #drop na values (0)\n  drop_na()\n\n# create data frame of monthly bike counts at each locations, should have three columns ( month, monthly total, location)\nbike_data_monthly_loc &lt;-bike %&gt;%\n  #group by month and location\n  group_by(Month, loc) %&gt;%\n  #create new column that has the monthly count of bikes for each location\n  summarize(monthly_total = sum(bike_total, na.rm = TRUE)) %&gt;%\n  #drop na values (0)\n  drop_na()\n\nbike_data_year_month&lt;- bike %&gt;% \n  group_by(Year, Month) %&gt;% \n  summarize(monthly_total = sum(bike_total, na.rm = TRUE)) %&gt;%\n  #drop na values (0)\n  drop_na()\n#make month a factor\nbike_data_year_month$Month &lt;- factor(month.abb[bike_data_year_month$Month], levels = month.abb)\n#make year a factor\nbike_data_year_month$Year &lt;- factor(bike_data_year_month$Year)\n\n\n  \n\n#create filtered dataframe for heatmap\nbike_data_yearly &lt;- bike %&gt;% \n  group_by(Year) %&gt;% \n  summarize(yearly_total = sum(bike_total, na.rm = TRUE)) # add yearly totals for every month/year\n\n\n\n\nAdd necessary fonts and icon files\n\n\nCode\n#add font awesome icons \nfont_add(family = \"fa-brands\",\n         regular = here::here(\"posts\", \"bike_infographic\",\"otfs\", \"Font Awesome 6 Brands-Regular-400.otf\"))\nfont_add(family = \"fa-regular\",\n         regular = here::here(\"posts\", \"bike_infographic\",\"otfs\", \"Font Awesome 6 Free-Regular-400.otf\")) \nfont_add(family = \"fa-solid\",\n         regular = here::here(\"posts\", \"bike_infographic\",\"otfs\", \"Font Awesome 6 Free-Solid-900.otf\"))\n\n\n#..........................import fonts..........................\n# `name` is the name of the font as it appears in Google Fonts\n# `family` is the user-specified id that you'll use to apply a font in your ggpplot\n#add montserrat font\nfont_add_google(name = \"Montserrat\", family = \"montserrat\")\n\n#................enable {showtext} for rendering.................\nshowtext_auto()\n\n\n\n\nCreate area plot of monthly bikes counts at different locations\n\n\nCode\n#create breaks and labels for x axis labeling\nmonth_breaks &lt;- 1:12 \nmonth_labels &lt;- c(\"Jan\", \"\", \"Mar\",\"\", \"May\", \"\", \"Jul\",\"\", \"Sep\",\"\", \"Nov\",\"\")\n#month_labels &lt;- c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\")\n\n#create color palette\ncustom_colors &lt;- c( \n                   \"Broadway\" = \"#706513\",  \n                   \"Burke\" = \"#B57114\", \n                   \"Elliott\" = \"#962B09\",\n                   \"Chief\"= \"#F2C078\",\n                   \"MTS Trail\" = \"#C1DBB3\",\n                   \"58th\"= \"#3891A6\")  \n\n\n#create geom area plot to show how bike traffic changes seasonally across diff locations\n\n# add data, fill area by location of bike sensor\nmountain &lt;- ggplot(data = bike_data_monthly_loc,  aes(x = Month, y = monthly_total, fill = loc)) +\n  #decrease the opacity\n  geom_area(alpha = 0.6) +\n  #add  color palette defined above\n  scale_fill_manual(values = custom_colors, labels = c(\"58th St.\", \"Broadway St.\", \"Burke Gilman Trail\", \"Chief Sealth Trail\", \"Elliott Bay Trail\", \"MTS Trail\")) +\n  #add rotated upward bike image, play around with sizes to fit top ridge of graph\n  geom_image(y = 510000, x = 2.5, image = \"images/rotate_up_bike.png\", size = .2 ) +\n  #add rotated downward bike image, play around with sizes to fit top ridge of graph\n  geom_image(y = 750000, x = 9.5, image = \"images/rotate_down_bike.png\", size = .2 ) +\n#add title, subtitle, x and y axis labels, and legend title\n  labs(#title = \"Seasonal Changes see heavier\\nbike traffic in Spring & Summer\",\n       #subtitle = \"Data from 2014 - 2020\",\n       x = \"Month\",\n       y = \"Number of Bikers Counted\",\n       fill = \"Location\") +\n  theme_minimal() +\n  \n  #add values and labels to x axis \n  scale_x_continuous(breaks = month_breaks, labels = month_labels)+\n  #convert y axis labels to be a standard number ( including e before)\n    scale_y_continuous(labels = scales::comma)+\n  #update theme\n  theme(\n    #remove grid elements and background elements \n    panel.grid.major = element_blank(), \n    panel.grid.minor = element_blank(),\n    axis.text.x = element_text(angle = 45, hjust = 1, colour = \"#FFFDD0\", size = 28, margin = margin(t = .4)),\n    axis.text.y = element_text( colour = \"#FFFDD0\", size = 28),\n    axis.line = element_blank(), # Removes axis lines\n    axis.ticks = element_blank(), # Removes axis ticks\n   axis.title.x = element_blank(), # Removes x-axis title\n    axis.title.y = element_blank(), # Removes y-axis title\n   # make background transparent for infographic\n   panel.background = element_rect(fill = \"transparent\", colour = NA),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n   #update font to montserrat\n    text = element_text(family = \"montserrat\") ,\n   #update legend margins to be closer to plot\n   legend.margin = margin(t = 0, r = 0, b = -5, l = -10, unit = \"pt\"),\n    legend.box.margin = margin(t = 0, r = -5, b = -25, l = -5, unit = \"pt\"),\n   #updaete space and size between legend elements\n    legend.spacing.x = unit(6, \"pt\"),\n    legend.spacing.y = unit(.75, \"cm\"),\n   legend.position = c(.8,1),\n    legend.key.size = unit(30, \"pt\"),\n    legend.justification = c(1, 1),\n    legend.text = element_text(size = 20, colour = \"#FFFDD0\"),\n   legend.title = element_text(colour = \"#FFFDD0\", size = 28))+ # update font size\n      guides(fill = guide_legend(byrow = TRUE))\n\n\n\n#save plot as png to add to infographic base using magick\npng('output/mountain.png',width = 22, height = 20, units = 'in', res = 300, bg = \"transparent\")\nprint(mountain)  # Ensure the plot is explicitly printed\ninvisible(dev.off())\n\nmountain\n\n\n\n\n\n\n\nCreate bar plot of total number of bikes counted per year\n\n\nCode\n#initiate ggplot with year\ncity_buildings &lt;- ggplot(bike_data_yearly, aes(x = Year, y = yearly_total)) +\n#add geom column layer, lower opacity, adjust width to represent buidlings, make bars creme with a think black outline\ngeom_col(width = .7, alpha = .7, fill = \"#FFFDD0\", color = \"black\", size = .2) +\n\n  #add year at the bottom of each bar in green\n geom_text(aes(label = Year, y = 0.05 * max(yearly_total)), size = 5, color = \"black\")+ \n\n  theme_minimal()+\n  #update theme\n  theme(\n    #remove grid elements and background elements\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.background = element_blank(),\n    plot.background = element_blank(),\n    axis.line = element_blank(), # Removes axis lines\n    axis.text.x = element_blank(), # Removes x-axis labels\n    axis.text.y = element_blank(), # Removes y-axis labels\n    axis.ticks = element_blank(), # Removes axis ticks\n    axis.title.x = element_blank(), # Removes x-axis title\n    axis.title.y = element_blank(), # Removes y-axis title\n    text = element_text(family = \"montserrat\")  ) # update font\n\n\n\n#save plot as png to add to infographic base using magick\n  ggsave('output/city_buildings.png', plot = city_buildings, device = 'png',width = 700, height = 800, units = 'px', dpi = 700)\n\ncity_buildings\n\n\n\n\n\n\n\nCreate heatmap to show how bike counts vary across both month and year\n\n\nCode\n#initiate ggplot with year and month, fill by monthly total\nheatmap &lt;- ggplot(bike_data_year_month, aes(x = Month, y = Year, fill = monthly_total)) +\n  geom_tile(color = \"white\") +  # Add white border to the tile\n  scale_fill_gradient(low = \"#FFFDD0\", high = \"#B57114\",  labels = scales::comma) +  # Define colors for the gradient\n  theme_minimal() +\n  scale_y_discrete(limits = rev(levels(bike_data_year_month$Year))) +  # Reverse order of years on y axis\n  #labs(title = \"Seasonal Changes see heavier\\nbike traffic in Spring & Summer\") +  # Add title\n   guides(\n     fill = guide_colourbar(title = \"Monthly Total\", title.position = \"bottom\", title.hjust = 0.5, barwidth = 5, barheight = .25,  # Adjust the size of the gradient bar and place legend underneath plot\n    label.position = \"bottom\")\n   ) + \n  theme(\n    #angle x axis ticks, update size and typeface color\n    axis.text.x = element_text(angle = 45, hjust = 1, colour = \"#FFFDD0\", size = 11),\n    #update size and typeface color for y axis ticks\n    axis.text.y = element_text(colour = \"#FFFDD0\", size = 11),  \n    #remove grid elements\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n    # remove background by making transparent\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    #remove axis line and x and y axis labels\n    axis.line = element_blank(),\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    #update typface\n    text = element_text(family = \"montserrat\"),\n    #place legend at bottom\n    legend.position = \"bottom\", \n    #update legend marigins\n    legend.margin = margin(t = -5, r = -10, b = -5, l = -10, unit = \"pt\"),\n    #update legend box margins\n    legend.box.margin = margin(t = 0, r = 0, b = 0, l = 0, unit = \"pt\"),\n    #update spacing around x and y axis of legend\n    legend.spacing.x = unit(2, \"pt\"),\n    legend.spacing.y = unit(2, \"pt\"),\n    legend.key.size = unit(1, \"pt\"),\n    #update legend text size\n    legend.text = element_text(size = 10, colour = \"#FFFDD0\"),\n    #remove legend title\n    legend.title = element_blank(),\n    plot.title = element_text(colour = \"#FFFDD0\", hjust = 0.5, size = 14)\n  )\n\n\n#save plot as png to add to infographic base using magick\n ggsave('output/heatmap.png', plot = heatmap, device = 'png',width = 500, height = 500, units = 'px', dpi =300)\n\n\nheatmap\n\n\n\n\n\n\n\nInfographic Base\n\n\nCode\n#.........................create caption.........................\n\n#create bike color palette for future reference\nbike_colors &lt;- c(\"#706513\",    \"#B57114\",  \"#962B09\", \"#F2C078\",      \"#C1DBB3\",\"#3891A6\")\n#text color for infographic\ntxt &lt;- bike_colors[4]\n#background color for infographic\nbg &lt;- bike_colors[3]\n\n#initialize infographic background\ng_base &lt;- ggplot() +\n  labs(\n    title = \"Seattle Bike Trends\", # add title to infographic\n    subtitle = \"Bikes counts from six bike sensor stations from 2014 to 2020\", # add subtitle to infographic\n    ) +\n  theme_void() + \n  #update theme elements\n  theme(\n    # specify typeface and font size for title\n  text = element_text(family = \"montserrat\", size = 20, lineheight = 1.2, colour = txt),  \n  #fill infographic background with specified background color\n    plot.background = element_rect(fill = bg, colour = bg), \n  #make title bold, adjust margins and horizontal justification\n    plot.title = element_text(size = 35, face = \"bold\", hjust = 0.5, margin = margin(b = 20)),  \n  #update subtitle typeface, adjst margins and horizontal justification\n    plot.subtitle = element_text(family = \"montserrat\", hjust = 0.5, margin = margin( t = -20, b = 30), size = 12),  \n  #adjut plot margins\n    plot.margin = margin(b = 10, t = 7, r = 10, l = 10)  \n  )\n\ng_base\n\n\n\n\n\nCode\n#save plot as png to add to make infographic  using magick\n ggsave('output/g_base.png', plot = g_base, device = 'png',width = 675, height = 1200, units = 'px', dpi = 300)\n\n\n\n\nCode\n#read all images created above and remove edges that are the background color from the plots\nmountain_image &lt;- image_read('output/mountain.png') %&gt;%\n  image_trim() \n\nbuildings_image &lt;- image_read('output/city_buildings.png') %&gt;%\n  image_trim()\n\nheatmap_image &lt;- image_read('output/heatmap.png') %&gt;%\n  image_trim()\n\n\nspace_needle_image &lt;- image_read('output/SeattleSpaceNeedle.png')\n\n\ntitle_image &lt;- image_read('output/g_base.png')\n\n#arrange all plots onto infographic base\ntitle_image %&gt;%\n  # add mountain plot on the middle left of plot\n  image_composite(image_scale(mountain_image, '400x'), offset = '+2+450') %&gt;%  \n  #add the buildings image on the lower right\n  image_composite(image_scale(buildings_image, \"300x\"), gravity = \"Center\", offset = \"+180+425\") %&gt;%  \n  #add the heatmap on the top right\n  image_composite(image_scale(heatmap_image, \"350\"), offset = \"+280+125\") %&gt;%  \n  #add the space needle png next to the buildings\n   image_composite(image_scale(space_needle_image, '100x'), gravity = \"Center\", offset = '-10+444') %&gt;% \n#create png\n  image_write(path = \"output/postcard.png\")\n\n#assign png to an R variable\ninfographic_base &lt;- readPNG('output/postcard.png')\n#print infographic\ngrid.raster(infographic_base)"
  },
  {
    "objectID": "posts/bike_infographic/index.html#footnotes",
    "href": "posts/bike_infographic/index.html#footnotes",
    "title": "Seattle Bike Trends",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSeattle Department of Transportation. (2023). Bike Counters. https://www.seattle.gov/transportation/projects-and-programs/programs/bike-program/bike-counters↩︎"
  },
  {
    "objectID": "posts/capstone-project-post/index.html",
    "href": "posts/capstone-project-post/index.html",
    "title": "Streamlining Carbon Accounting for Darn Tough Vermont",
    "section": "",
    "text": "Creating a Reproducible Emissions Model for a Sock Manufacturer\nWith corporate sustainability growing ever more important, recent US, EU, and California legislation now mandates that public organizations disclose their greenhouse gas emissions and climate-related risks. Beyond these political pressures, social expectations are also driving organizations to adopt more sustainable practices and ensure transparency around their emissions. For Darn Tough, a brand committed to sustainability, these evolving standards present both a challenge and an opportunity.\n\n\nAbout Darn Tough\nOur team’s client, Darn Tough, is a Vermont-based outdoor sock company that is serious about prioritizing sustainability and creating long-lasting products. Known for their lifetime warranty, Darn Tough offers customers a free new pair of socks for shipping back a worn-out pair, which gets recycled into blankets for the U.S. military. While this lifetime warranty is the company’s landmark sustainability initiative, they are increasingly concerned about their carbon footprint, as Darn Tough strives to align its operations with the 2030 target set by its largest retailer, REI. Specifically, this target is to achieve a 55% reduction in total GHG emissions from a 2019 baseline level by 2030. Reaching the 2030 target will require Darn Tough to develop effective ways to model their emissions, so they can best understand the critical points in their supply chain that are responsible for the most emissions, in addition to points where emissions can be most easily reduced.\n\n\nUnderstanding Greenhouse Gas Emissions\nCalculating an organization’s carbon footprint is a multifaceted endeavor, requiring a meticulous evaluation of every step in the product lifecycle, from raw material sourcing to manufacturing, distribution, and even post-consumer handling. Darn Tough follows the Greenhouse Gas (GHG) Protocol which categorizes emissions into three distinct scopes:\n* Scope 1 (Burn): Direct emissions from sources owned or controlled by the company\n* Scope 2 (Buy): Indirect emissions from purchased energy\n* Scope 3 (Beyond): All other indirect emissions, including upstream and downstream activities\nFor Darn Tough, this involves accounting for emissions at every stage of their sock production, from manufacturing fibers, shipping products, to recycling worn-out socks through their warranty program.\n\n\n\n\n\n\n\nThe Challenge\nDarn Tough, renowned for producing durable socks for the outdoor apparel industry, utilizes a blend of merino wool and synthetic materials. Their partnership with REI (Recreational Equipment, Inc.), which has set an ambitious target to reduce emissions by 55% from 2019 levels by 2030, underscores the urgency to refine their greenhouse gas emissions calculations. However, Darn Tough’s current method, which primarily uses Excel, is reliant on manual, non-reproducible calculations in Excel and poses challenges for the team, underscoring the need for a more streamlined and accurate solution.\n\n\nOur Approach\nTo meet these challenges head-on, we defined three major objectives and variables:\n1. **Utilize Accurate Methodology:** Address discrepancies and errors in the existing emissions calculations by updating and standardizing the methodology.\n2. **Streamline the Calculation Process:** Develop a reproducible, efficient method to replace the complex and unwieldy Excel-based process.\n3. **Conduct Scenario Analysis:** Create tools that allow for scenario planning and data-driven decision-making to reduce emissions effectively.\n\n\n\n\n\n\n\nDelivering Solutions\n\nUpdated Methodology\nOur first task was to refine Darn Tough’s calculation methodology. We conducted extensive research and improved calculations, ensuring alignment with industry standards and the Greenhouse Gas (GHG) Protocol, including using the latest emission factors. Along the way, we ensured all updates were thoroughly documented. This update not only improved accuracy but also provided a robust foundation for future calculations.\n\n\nReproducible Model\nNext, we tackled the complexity of Darn Tough’s existing model.\nDarn Tough’s original method used a complex Excel sheet to model their emissions. This approach was time consuming, resource intensive, and difficult to replicate yearly.\nBy automating the emissions calculations using the R programming language, we created a reproducible and accurate approach.\nOur streamlined solution involved creating a simplified Excel input template with tidy, formula-free tables and automating calculations with R. This new model takes inventory data as inputs and produces precise emissions totals, eliminating the potential for manual errors and significantly simplifying the process.\n\n\n\n\n\n\n\nEmissions Calculator Application\nTo make these improvements user-friendly, we developed an emissions calculator application using Shiny. This app allows users to upload their data, select scopes, and calculate emissions effortlessly. It also provides downloadable outputs and interactive visualizations, making it easier to understand and manage carbon emissions.\nThe new Emissions Calculator Dashboard makes it easier for Darn Tough to calculate their emissions. Users can upload data, select specific scopes, calculate emissions, and generate downloadable outputs and interactive visualizations all in one centralized interface.\n\n\n\n\n\nScreenshot of the dashboard with fake data.\n\n\n\nScenario Analysis Tool\nBeyond calculating emissions, our scenario analysis tool helps Darn Tough identify practical ways to reduce their carbon footprint. Users can input hypothetical changes, such as switching to recycled wool, and compare the impact on emissions against a baseline year. This feature provides actionable insights for making informed, effective decisions on emission reductions.\n\n\n\n\n\nScreenshot of the scenario analysis tool with fake data.\n\n\nMoving Forward\nWith the Carbon Emission Calculation Dashboard, Darn Tough is now equipped to calculate, visualize, and reduce their carbon emissions more efficiently. This streamlined process not only saves time but also allows the company to focus on broader sustainability initiatives. As Darn Tough continues to innovate and improve, we are confident that, with the help of our emission calculation dashboard, they are on track to reaching their reductions targets.\n\n\nMy experience\nThis project was a unique opportunity to work with a real-world client and apply data science skills to a sustainability challenge. I learned so much about carbon accounting, building interactive dashboards, and the strengths of both Excel and R within a carbon accounting framework. I am grateful for the opportunity to contribute to Darn Tough’s sustainability efforts and I look forward to seeing how Darn Tough uses these tools to reduce their emissions and continue their commitment to sustainability. From co writing the proposal for this project to seeing it through to the finished project, I am so proud of the final product that our team achieved.\n\n\nAcknowledgments\nWe extend our deepest gratitude to Kristen Graf from Darn Tough, Dr. Enze Jin, Dr. Carmen Galaz Garcia, the MEDS Capstone Committee, and our entire MEDS cohort for their invaluable support and feedback throughout this project."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Annie Adams",
    "section": "",
    "text": "Hi there! Welcome to my website!\nMy name is Annie Adams! After receiving my Master of Environmental Data Science from the Bren School of Environmental Science & Management in June of 2024, I just couldn’t stay away! I am now working as a lecturer in the Master of Environmental Data Science program, helping to develop coursework and teach the next cohort of environmental data scientists! When I am not behind a computer, I love to hike, cycle, explore new countries, and bikepack! Check out the rest of my website to learn more about me and see what I have been up to!"
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "My Blog",
    "section": "",
    "text": "Streamlining Carbon Accounting for Darn Tough Vermont\n\n\n\n\n\n\n\nR\n\n\nShiny\n\n\nCarbon accounting\n\n\n\n\nHow we helped a sock manufacturer calculate their carbon emissions and pinpoint ways to meet reduction targets\n\n\n\n\n\n\nJun 18, 2024\n\n\nAnnie Adams, Carly Caswell, Flora Hamilton, Linus Ghanadan\n\n\n\n\n\n\n  \n\n\n\n\nSeattle Bike Trends\n\n\n\n\n\n\n\nData Visualization\n\n\nR\n\n\ninfographic\n\n\n\n\n\n\n\n\n\n\n\nMar 2, 2024\n\n\nAnnie Adams\n\n\n\n\n\n\nNo matching items"
  }
]